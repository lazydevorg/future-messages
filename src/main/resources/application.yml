spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/futuremessages
    username: futuremessages
    password: messages

  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: always
    properties:
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
      org.quartz.scheduler.instanceId: AUTO
      org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
      org.quartz.threadPool.threadCount: 4
      org.quartz.jobStore.isClustered: true

  cloud:
    stream:
      bindings:
        output:
          destination: ${EXCHANGE_NAME:future-messages}
      rabbit:
        bindings:
          output:
            producer:
              routing-key-expression: headers.destination

  sleuth:
    sampler:
      probability: 1.0

  zipkin:
    service:
      name: future-messages

  rabbitmq:
    template:
      retry:
        enabled: true

management:
  metrics:
    export:
      prometheus:
        enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, prometheus, beans, configprops, metrics
